apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
  namespace: dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: registry.gitlab.com/greenjetsdemo/ui-design/frontend/dev:backend_latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
        env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: POSTGRES_PASSWORD
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              name: db-config
              key: POSTGRES_USER
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: db-config
              key: POSTGRES_DB
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              name: db-config
              key: POSTGRES_HOST
        - name: POSTGRES_PORT
          valueFrom:
            configMapKeyRef:
              name: db-config
              key: POSTGRES_PORT
      imagePullSecrets:
      - name: regcred


---
apiVersion: v1
kind: Service
metadata:
  name: backendservice
  namespace: dev
spec:
  selector:
    app: backend
  ports:
  - protocol: TCP
    port: 8000
    targetPort: 8000
  type: LoadBalancer


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
  namespace: dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend
        image: registry.gitlab.com/greenjetsdemo/ui-design/frontend/dev:frontend_latest
        imagePullPolicy: Always  
        ports:
        - containerPort: 3000
      imagePullSecrets:
      - name: regcred


---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  namespace: dev
spec:
  selector:
    app: frontend
  ports:
  - protocol: TCP
    port: 80
    targetPort: 3000
  type: LoadBalancer
